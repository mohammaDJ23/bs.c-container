name: Deploy to staging environment

on:
  push:
    branches:
      - staging

jobs:
  build-push-action:
    name: Building the image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/c-container-staging
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'staging') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ./Dockerfile.staging
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CONTAINER_PUBLIC_PATH=${{ secrets.CONTAINER_PUBLIC_PATH }}
            AUTH_PUBLIC_PATH=${{ secrets.AUTH_PUBLIC_PATH }}
            BANK_PUBLIC_PATH=${{ secrets.BANK_PUBLIC_PATH }}
            CACHE_SECRET_KEY=${{ secrets.STAGING_CACHE_SECRET_KEY }}
            BANK_SERVICE=${{ secrets.STAGING_BANK_SERVICE }}
            USER_SERVICE=${{ secrets.STAGING_USER_SERVICE }}
            CONTAINER_APP=${{ secrets.STAGING_CONTAINER_APP }}
            AUTH_APP=${{ secrets.STAGING_AUTH_APP }}
            BANK_APP=${{ secrets.STAGING_BANK_APP }}
            PORT=${{ secrets.STAGING_PORT }}

  deploying-ssh:
    needs: build-push-action
    name: Running the deployment on the vps server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Executing the remote ssh command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          command_timeout: 60m
          script: |
            cd app
            npm run docker:stop:c-container:staging
            npm run docker:rm:c-container:staging
            npm run docker:rmi:c-container:staging
            npm run docker:compose:up:c-container:staging
